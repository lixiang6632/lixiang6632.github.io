<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python基础语法</title>
      <link href="/2019/12/04/Python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
      <url>/2019/12/04/Python%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="列表（list）"><a href="#列表（list）" class="headerlink" title="列表（list）"></a>列表（list）</h1><h2 id="Python中最常用的数据类型是列表，可以通过方括号括起、逗号分隔的一组值（元素）得到。"><a href="#Python中最常用的数据类型是列表，可以通过方括号括起、逗号分隔的一组值（元素）得到。" class="headerlink" title="Python中最常用的数据类型是列表，可以通过方括号括起、逗号分隔的一组值（元素）得到。"></a>Python中最常用的数据类型是列表，可以通过方括号括起、逗号分隔的一组值（元素）得到。</h2><pre class=" language-创建一个名为nums的列表"><code class="language-创建一个名为nums的列表">    nums = [1, 3, 5, 7, 9]</code></pre><h2 id="列表支持索引和切片操作，索引从0开始，最后一个元素的索引可以使用-1，索引"><a href="#列表支持索引和切片操作，索引从0开始，最后一个元素的索引可以使用-1，索引" class="headerlink" title="列表支持索引和切片操作，索引从0开始，最后一个元素的索引可以使用-1，索引"></a>列表支持索引和切片操作，索引从0开始，最后一个元素的索引可以使用-1，索引</h2>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode使用Jupyter Notebook</title>
      <link href="/2019/12/03/VSCode%E4%BD%BF%E7%94%A8Jupyter-Notebook/"/>
      <url>/2019/12/03/VSCode%E4%BD%BF%E7%94%A8Jupyter-Notebook/</url>
      
        <content type="html"><![CDATA[<p> 使用最新的Python扩展，你可以直接编辑.ipynb文件，利用VSCode获得Jupyter Notebook的交互性，以全新的方式本地（远程）试验和处理数据。</p><h1 id="设置环境"><a href="#设置环境" class="headerlink" title="设置环境"></a>设置环境</h1><p> 要使用Jupyter Notebook，必须在VSCode中先激活Anaconda环境，可参考<a href="https://xiangli.website/2019/11/28/%E4%BD%BF%E7%94%A8VSCode%E7%BC%96%E5%86%99Python%E4%BB%A3%E7%A0%81/">使用VSCode编写Python代码</a>中“配置VSCode”部分。</p><h1 id="创建或打开Jupyter-Notebook"><a href="#创建或打开Jupyter-Notebook" class="headerlink" title="创建或打开Jupyter Notebook"></a>创建或打开Jupyter Notebook</h1><p> 按“Ctrl + Shift + P”，输入“Python:Create New Blank Jupyter Notebook”命令或者在工作区新建.ipynb文件来创建Jupyter Notebook。若您有现成的Jupyter Notebook，直接右击选择VSCode打开方式即可。</p><h1 id="输入代码并交互"><a href="#输入代码并交互" class="headerlink" title="输入代码并交互"></a>输入代码并交互</h1><p> <img src="/medias/md/Jupyter.png" alt="代码交互示意图"></p><h1 id="更多Jupyter-Notebook使用请参考官方文档"><a href="#更多Jupyter-Notebook使用请参考官方文档" class="headerlink" title="更多Jupyter Notebook使用请参考官方文档"></a>更多Jupyter Notebook使用请参考<a href="https://code.visualstudio.com/docs/python/jupyter-support" target="_blank" rel="noopener">官方文档</a></h1>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用VSCode编写Python代码</title>
      <link href="/2019/11/28/%E4%BD%BF%E7%94%A8VSCode%E7%BC%96%E5%86%99Python%E4%BB%A3%E7%A0%81/"/>
      <url>/2019/11/28/%E4%BD%BF%E7%94%A8VSCode%E7%BC%96%E5%86%99Python%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h1 id="环境配置（Win10系统）"><a href="#环境配置（Win10系统）" class="headerlink" title="环境配置（Win10系统）"></a>环境配置（Win10系统）</h1><h2 id="安装Anaconda"><a href="#安装Anaconda" class="headerlink" title="安装Anaconda"></a>安装Anaconda</h2><p>从官网下载 <a href="https://www.anaconda.com/distribution/#download-section" target="_blank" rel="noopener">Anaconda Python 3.7 version</a>，直接默认安装即可（安装路径可自行选择）</p><h2 id="手动配置Anaconda环境变量"><a href="#手动配置Anaconda环境变量" class="headerlink" title="手动配置Anaconda环境变量"></a>手动配置Anaconda环境变量</h2><p>假设Anaconda安装路径为: D:\software\Anaconda3, 右击计算机，选择属性，选择高级系统设置，选择环境变量，双击系统变量中的Path，在里面添加如下配置：</p><pre class=" language-add_path"><code class="language-add_path">    D:\software\Anaconda3    D:\software\Anaconda3\Scripts    D:\software\Anaconda3\Library\bin</code></pre><p>添加完后选择确定，打开系统命令行输入</p><pre><code>    conda --version</code></pre><p>能正常返回conda的版本信息即可</p><h2 id="安装VSCode"><a href="#安装VSCode" class="headerlink" title="安装VSCode"></a>安装VSCode</h2><p>从官网下载 <a href="https://code.visualstudio.com/Download" target="_blank" rel="noopener">Visual Studio Code</a>，直接默认安装即可</p><h2 id="配置VSCode"><a href="#配置VSCode" class="headerlink" title="配置VSCode"></a>配置VSCode</h2><h3 id="安装python扩展"><a href="#安装python扩展" class="headerlink" title="安装python扩展"></a>安装python扩展</h3><p>打开VSCode，按“Ctrl + Shift + X”打开扩展，输入“python”搜索，安装第一个官方的python的扩展（下载量最多的那个）</p><h3 id="配置设置参数"><a href="#配置设置参数" class="headerlink" title="配置设置参数"></a>配置设置参数</h3><p>按“Ctrl + ，”打开设置，搜索python.pythonPath,将原先的pyhton修改为你Anaconda安装的python路径：</p><pre><code>    D:\software\Anaconda3\python.exe</code></pre><p>接着搜索python.terminal.activateEnvironment，将勾取消掉</p><h3 id="新建一个python"><a href="#新建一个python" class="headerlink" title="新建一个python"></a>新建一个python</h3><p>按“Ctrl + O”选择一个你用于存储python代码的空文件夹，在文件夹下新建一个test.py文件，输入一段简单的测试代码：</p><pre><code>    a = 1    b = 1    c = a + b    print(c)</code></pre><h3 id="配置调试环境"><a href="#配置调试环境" class="headerlink" title="配置调试环境"></a>配置调试环境</h3><p>按“Ctrl + Shift + D”打开调试界面, 点击左上方No Configuration右侧的设置按钮，选择下拉菜单中的Python File，会自动生成一个launch.json的调试配置环境，该文件会自动保存在当前文件夹的.vscode目录中。之后在当前文件夹就不必重复该项配置</p><h3 id="调试代码"><a href="#调试代码" class="headerlink" title="调试代码"></a>调试代码</h3><p>按“F5”进行调试状态，不断按“F11”，可以在左侧观察到每步执行后变量的变化，当然也可以使用DEBUG CONSILE进行手动自定义调试</p><h3 id="运行代码"><a href="#运行代码" class="headerlink" title="运行代码"></a>运行代码</h3><p>直接右击test.py文件，选择Run Python File in Terminal，可以直接看到终端打印了结果2</p><h3 id="更多VSCode使用可自行参考官方文档"><a href="#更多VSCode使用可自行参考官方文档" class="headerlink" title="更多VSCode使用可自行参考官方文档"></a>更多VSCode使用可自行参考<a href="https://code.visualstudio.com/docs" target="_blank" rel="noopener">官方文档</a></h3>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
